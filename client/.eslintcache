[{"C:\\Users\\User\\Documents\\GitHub\\M7011E_project\\client\\src\\index.js":"1","C:\\Users\\User\\Documents\\GitHub\\M7011E_project\\client\\src\\reportWebVitals.js":"2","C:\\Users\\User\\Documents\\GitHub\\M7011E_project\\client\\src\\App.js":"3","C:\\Users\\User\\Documents\\GitHub\\M7011E_project\\client\\src\\Register.js":"4","C:\\Users\\User\\Documents\\GitHub\\M7011E_project\\client\\src\\RegisterSignup.js":"5","C:\\Users\\User\\Documents\\GitHub\\M7011E_project\\client\\src\\useRegister.js":"6","C:\\Users\\User\\Documents\\GitHub\\M7011E_project\\client\\src\\validateRegistration.js":"7","C:\\Users\\User\\Documents\\GitHub\\M7011E_project\\client\\src\\RegisterSuccess.js":"8"},{"size":517,"mtime":1607942678023,"results":"9","hashOfConfig":"10"},{"size":375,"mtime":1607942678024,"results":"11","hashOfConfig":"10"},{"size":209,"mtime":1608124375989,"results":"12","hashOfConfig":"10"},{"size":530,"mtime":1608143890259,"results":"13","hashOfConfig":"10"},{"size":3508,"mtime":1608135487653,"results":"14","hashOfConfig":"10"},{"size":901,"mtime":1608143996994,"results":"15","hashOfConfig":"10"},{"size":793,"mtime":1608135488911,"results":"16","hashOfConfig":"10"},{"size":493,"mtime":1608134017317,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"1ou20t3",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"20"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"20"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"20"},"C:\\Users\\User\\Documents\\GitHub\\M7011E_project\\client\\src\\index.js",[],["39","40"],"C:\\Users\\User\\Documents\\GitHub\\M7011E_project\\client\\src\\reportWebVitals.js",[],"C:\\Users\\User\\Documents\\GitHub\\M7011E_project\\client\\src\\App.js",[],"C:\\Users\\User\\Documents\\GitHub\\M7011E_project\\client\\src\\Register.js",[],"C:\\Users\\User\\Documents\\GitHub\\M7011E_project\\client\\src\\RegisterSignup.js",["41"],"import React from \"react\"\r\nimport useRegister from \"./useRegister\"\r\nimport validate from \"./validateRegistration\"\r\nimport \"./Register.css\"\r\nconst RegisterSignup = ({submitRegistration}) => {\r\n    const {controlChange, values, handleSubmit, errors} = useRegister(submitRegistration, validate);\r\n    \r\n    return (\r\n        <div className = \"form-how\">\r\n            <form className=\"form\" onSubmit={handleSubmit}>\r\n                <h1>\r\n                    Please fill out registration information bellow\r\n                </h1>\r\n                <div className=\"form-inputs\">\r\n                    <label htmlFor=\"name\"\r\n                    className=\"form-label\">\r\n                    Name  \r\n                    </label>\r\n                    <input\r\n                            type=\"text\"\r\n                            name=\"name\"\r\n                            className=\"form-input\"\r\n                            placeholder=\"Enter your full name\"\r\n                            value={values.name}\r\n                            onChange={controlChange}\r\n                    />\r\n                    {errors.name && <p>{errors.name}</p>}     \r\n                </div>\r\n                <div className=\"form-inputs\">\r\n                    <label htmlFor=\"email\"\r\n                    className=\"form-label\">\r\n                    Email\r\n                    </label>\r\n                    <input\r\n                            type=\"email\"\r\n                            name=\"email\"\r\n                            className=\"form-input\"\r\n                            placeholder=\"Enter your email\"\r\n                            value={values.email}\r\n                            onChange={controlChange}\r\n                    />\r\n                    {errors.email && <p>{errors.email}</p>}   \r\n                </div>\r\n                <div className=\"form-inputs\">\r\n                    <label htmlFor=\"password\"\r\n                    className=\"form-label\">\r\n                    Password\r\n                    </label>\r\n                    <input\r\n                            type=\"password\"\r\n                            name=\"password\"\r\n                            className=\"form-input\"\r\n                            placeholder=\"Choose a password\"\r\n                            value={values.password}\r\n                            onChange={controlChange}\r\n                    />\r\n                    {errors.password && <p>{errors.password}</p>}   \r\n                </div>\r\n                <div className=\"form-inputs\">\r\n                    <label htmlFor=\"passwordc\"\r\n                    className=\"form-label\">\r\n                    Confirm password \r\n                    </label>\r\n                    <input\r\n                            type=\"password\"\r\n                            name=\"passwordc\"\r\n                            className=\"form-input\"\r\n                            placeholder=\"Confirm the password\"\r\n                            value={values.passwordc}\r\n                            onChange={controlChange}\r\n                    />\r\n                    {errors.passwordc && <p>{errors.passwordc}</p>}   \r\n                </div>\r\n                <button className = \"form-input-button\"\r\n                    type=\"submit\">\r\n                    Sign up\r\n                </button>\r\n                <span className=\"form-input-login\">\r\n                    Already created an account? Login in <a href=\"#\">here</a> \r\n                </span>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default RegisterSignup\r\n","C:\\Users\\User\\Documents\\GitHub\\M7011E_project\\client\\src\\useRegister.js",["42"],"import {useState, useEffect} from 'react'\r\n\r\nconst useRegister = (callback, validate) =>{\r\n    const [values, setValues] = useState({\r\n        name:'',\r\n        email:'',\r\n        password:'',\r\n        passwordc:''\r\n    })\r\n    const [errors, setErrors] = useState({})\r\n    const [submitting, setSubmitting] = useState(false)\r\n\r\n    const controlChange = e => {\r\n        const {name, value} = e.target\r\n        setValues({\r\n            ...values,\r\n            [name]: value\r\n        })\r\n        \r\n    }\r\n    const handleSubmit = e => {\r\n        e.preventDefault();\r\n        \r\n        setErrors(validate(values));\r\n        setSubmitting(true);\r\n        \r\n    }\r\n    useEffect(() =>{\r\n        if(Object.keys(errors).length === 0 &&\r\n        submitting){\r\n            callback();\r\n        }\r\n    },[errors]\r\n    )\r\n    return {controlChange, values, handleSubmit, errors}\r\n}\r\nexport default useRegister\r\n","C:\\Users\\User\\Documents\\GitHub\\M7011E_project\\client\\src\\validateRegistration.js",[],["43","44"],"C:\\Users\\User\\Documents\\GitHub\\M7011E_project\\client\\src\\RegisterSuccess.js",["45","46"],"import React from 'react'\r\n\r\nconst RegisterSuccess = () => {\r\n    return (\r\n        <div className=\"form-how\">\r\n            <div className=\"register-success\">Your registration was successfull </div>\r\n            <img src=\"img/WindTurbine.svg\" width=\"35%\" alt=\"turbine-image\" className=\"form-img-2\" />\r\n            <span className=\"success-input-login\">\r\n                Login in <a href=\"#\">here</a> \r\n            </span>\r\n        </div>\r\n        \r\n    )\r\n}\r\n\r\nexport default RegisterSuccess\r\n",{"ruleId":"47","replacedBy":"48"},{"ruleId":"49","replacedBy":"50"},{"ruleId":"51","severity":1,"message":"52","line":79,"column":58,"nodeType":"53","endLine":79,"endColumn":70},{"ruleId":"54","severity":1,"message":"55","line":33,"column":7,"nodeType":"56","endLine":33,"endColumn":15,"suggestions":"57"},{"ruleId":"47","replacedBy":"58"},{"ruleId":"49","replacedBy":"59"},{"ruleId":"60","severity":1,"message":"61","line":7,"column":13,"nodeType":"53","endLine":7,"endColumn":101},{"ruleId":"51","severity":1,"message":"52","line":9,"column":26,"nodeType":"53","endLine":9,"endColumn":38},"no-native-reassign",["62"],"no-negated-in-lhs",["63"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'callback' and 'submitting'. Either include them or remove the dependency array. If 'callback' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["64"],["62"],["63"],"jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You donâ€™t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","no-global-assign","no-unsafe-negation",{"desc":"65","fix":"66"},"Update the dependencies array to be: [callback, errors, submitting]",{"range":"67","text":"68"},[795,803],"[callback, errors, submitting]"]